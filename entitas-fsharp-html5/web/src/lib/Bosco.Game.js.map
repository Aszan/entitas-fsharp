{"version":3,"sources":["../../../lib/Bosco.Game.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAS+D;AAAA;;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAI;AAAgB;AAApB;AACD;AACA;AACA;AACA,4BAAe,sCAAf;AACG;AAgBsB;AACR;AAtBhB;AAA8D;;;;yCAyB3D;AAAA;AAAkB;;;kCAKlB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kLAAuB;AAAA;AAAA;AAA+C;AAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA,wCACI;AAAA;;AACA;;AACA;AAAA;;AAAA;AAAU;AAAU,iBAHxB;AAIE;;;+CA5BE;AAAA;;AAAI,wBAAG,qBAAH;AACR;AACY,6BAAC,aAAD;AACZ,mCAAe,oBAAf;AACA,mCAAe,wBAAf;;AACA,oBAAG,oBAAH,EACI;AAAA;AACA;AACA;AAAkB;;AAEtB,6CAAkD;AAAA;AAAA;AAAO,qBAAP;AAAO,iBAAzD;AACA;AACA;AACA;AAbK;;;;;;;;;;;iCAeE;AAAA;AAAG","file":"Bosco.Game.js","sourcesContent":["namespace Bosco\nopen Fable.Core\nopen Fable.Import\nopen Fable.Import.Browser\nopen Fable.Core.JsInterop\nopen System.Collections.Generic\n\n(** Abstrct Game *)\n[<AbstractClass>]\ntype Game(width, height, images:Dictionary<string, string>) as this =\n    let mutable previousTime = 0.0\n    let mutable elapsedTime = 0.0\n    let mutable totalFrames = 0\n    let renderer = PIXI.WebGLRenderer(width, height)\n    do document.body.appendChild(renderer.view) |> ignore        \n    let rec animate timeStamp =\n        let t = if previousTime>0.0 then previousTime else timeStamp\n        previousTime <- timeStamp\n        let delta = (timeStamp - t) * 0.001\n        totalFrames <- totalFrames + 1\n        elapsedTime <- elapsedTime + delta\n        if elapsedTime > 1.0 then\n            this.fps <- totalFrames\n            totalFrames <- 0\n            elapsedTime <- 0.0\n\n        window.requestAnimationFrame(FrameRequestCallback animate) |> ignore\n        this.Update(delta)\n        this.Draw(delta)\n        renderer.render(this.spriteBatch)\n    member val spriteBatch = PIXI.Container()\n    member val fps = 0 with get,set\n    [<DefaultValue>]val mutable Content:obj\n    member this.Initialize() =\n        this.LoadContent()\n    abstract member LoadContent: unit -> unit\n    abstract member Update: float -> unit\n    abstract member Draw: float -> unit\n    member this.Run() =\n        for image in images do PIXI.Globals.loader?add(image.Key, image.Value) |> ignore    \n        PIXI.Globals.loader.load(System.Func<_,_,_>(fun loader resources ->\n            this.Content <- resources\n            this.Initialize()\n            animate 0. |> ignore\n        ))\n\n"]}