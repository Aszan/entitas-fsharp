{"version":3,"sources":["../../../lib/Entities.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAgBU,E;;;AAGN;AAAA,sCAAY,YAAZ;AAAA;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCJ;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AARX;AAAA;AAAA;AAAA;AAAA;AAec;AACE;AAdpB,6HAgBW,yDAhBX;AAFU;;AAuBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBgB;AAdpB,6HAgBW,yDAhBX;AAFU;;AAuBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AARX;AAAA;AAAA;AAAA;AAAA;AAec;AACE;AAdpB,6HAgBW,yDAhBX;AAFU;;AAsBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AARX;AAAA;AAAA;AAAA;AAAA;AAec;AACE;AAdpB,6HAgBW,yDAhBX;AAFU;;AAuBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AARX;AAAA;AAAA;AAAA;AAAA;AAec;AACE;AAdpB,6HAgBW,yDAhBX;AAFU;;AAuBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AACE;AATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ,8FAeiB,6BAAY,OAAZ,qBAfjB,2BAgBW,yDAhBX;AAFU;;AAsBN;AAAS;AACb,wBAAiB,sCAAjB;AAES;AAHL;AAAA;AAAA;AAAA;AAQW;AACE;AATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJ,8FAeiB,6BAAY,OAAZ,qBAfjB,2BAgBW,yDAhBX;AAFU","file":"Entities.js","sourcesContent":["module Entities\n\n(** ShmupWarz Game Demo *)\n#if HTML5\nopen Fable.Core\nopen Fable.Import\nopen Fable.Import.Browser\nopen Fable.Core.JsInterop\nopen Bosco\n#endif\n#if WINDOWS || LINUX\nopen Microsoft.Xna.Framework\nopen Microsoft.Xna.Framework.Graphics\n#endif\nopen Components\nopen System.Collections.Generic\nlet rnd = System.Random()\nlet mutable UniqueId = 0\nlet NextUniqueId() = \n    UniqueId <- UniqueId + 1\n    UniqueId\n\n(** Entity is a record of components *)\ntype Entity = \n    {\n        Id              : int;                  (* Unique sequential id *)\n        Name            : string;               (* Display name *)\n        Active          : bool;                 (* In use *)\n        EntityType      : EntityType;           (* Category *)\n        Layer           : Layer;                (* Display Layer *)\n        Tint            : Color option;         (* Color to use as tint *)\n        Bounds          : int option;           (* For Hit Detection *)\n        Expires         : float option;         (* Entity duration *)\n        Health          : Health option;        (* Points *)\n        Tween           : Tween option;         (* Explosion tweens *)\n#if HTML5\n        Sprite          : PIXI.Sprite option;   (* Sprite *)\n        Position        : PIXI.Point;           (* Position *)\n        Scale           : PIXI.Point option;    (* Display Scale *)\n        Size            : PIXI.Point;           (* Sprite size *)\n        Velocity        : PIXI.Point option;    (* Movement speed *)\n#endif\n#if WINDOWS || LINUX\n        Position        : Vector2;              (* Position *)\n        Sprite          : Texture2D option;     (* Sprite *)\n        Scale           : Vector2 option;       (* Display Scale *)\n        Size            : Vector2;              (* Sprite size *)\n        Velocity        : Vector2 option;       (* Movement speed *)\n#endif\n    }\n\n\n(** Create a Player Entity *)\nlet CreatePlayer (content:obj) =\n    let sprite = CreateSprite(unbox content?fighter?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Player\";\n        Active = true;\n        EntityType = EntityType.Player; \n        Layer = Layer.PLAYER;\n        Position = CreatePoint(0., 0.); \n        Scale = None;\n        Sprite = Some(sprite);\n        Tint = None;\n\n        Bounds = Some(43);\n        Expires = None;\n        Health = Some(CreateHealth(100, 100));\n        Velocity = Some(CreatePoint(0., 0.));\n        Tween = None;\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n     \n(** Create a Bullet Entity *)\nlet CreateBullet (content:obj) =\n    let sprite = CreateSprite(unbox content?bullet?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Bullet\";\n        Active = false;\n        EntityType = EntityType.Bullet; \n        Layer = Layer.BULLET;\n        Position = CreatePoint(0., 0.); \n        Scale = None;\n        Sprite = Some(sprite);\n        Tint = Some(Color.GreenYellow);\n\n        Bounds = Some(5);\n        Expires = Some(0.1);\n        Health = None;\n        Velocity = Some(CreatePoint(0., -800.));\n        Tween = None;\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n\n(** Create Enemy *)\nlet CreateEnemy1 (content:obj)  =\n    let sprite = CreateSprite(unbox content?enemy1?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Enemy1\";\n        Active = false;\n        EntityType = EntityType.Enemy; \n        Layer = Layer.ENEMY1;\n        Position = CreatePoint(0., 0.); \n        Scale = None;\n        Sprite = Some(sprite);\n        Tint = None;\n\n        Bounds = Some(20);\n        Expires = None\n        Health = Some(CreateHealth(10, 10));\n        Velocity = Some(CreatePoint(0., 40.));\n        Tween = None;\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n(** Create Enemy *)\nlet CreateEnemy2 (content:obj) =\n    let sprite = CreateSprite(unbox content?enemy2?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Enemy2\";\n        Active = false;\n        EntityType = EntityType.Enemy; \n        Layer = Layer.ENEMY2;\n        Position = CreatePoint(0., 0.); \n        Scale = None;\n        Sprite = Some(sprite);\n        Tint = None;\n\n        Bounds = Some(40);\n        Expires = None\n        Health = Some(CreateHealth(20, 20));\n        Velocity = Some(CreatePoint(0., 30.));\n        Tween = None;\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n\n(** Create Enemy *)\nlet CreateEnemy3 (content:obj)  =\n    let sprite = CreateSprite(unbox content?enemy3?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Enemy3\";\n        Active = false;\n        EntityType = EntityType.Enemy; \n        Layer = Layer.ENEMY3;\n        Position = CreatePoint(0., 0.); \n        Scale = None;\n        Sprite = Some(sprite);\n        Tint = None;\n\n        Bounds = Some(70);\n        Expires = None\n        Health = Some(CreateHealth(60, 60));\n        Velocity = Some(CreatePoint(0., 20.));\n        Tween = None;\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n\n(** Create Big Explosion *)\nlet CreateExplosion (content:obj) =\n    let sprite = CreateSprite(unbox content?explosion?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Explosion\";\n        Active = false;\n        EntityType = EntityType.Explosion; \n        Layer = Layer.EXPLOSION;\n        Position = CreatePoint(0., 0.); \n        Scale = Some(CreatePoint(1., 1.))\n        Sprite = Some(sprite);\n        Tint = Some(Color.LightGoldenrodYellow);\n\n        Bounds = None;\n        Expires = Some(0.5);\n        Health = None;\n        Velocity = None;\n        Tween = Some(CreateTween(1./100., 1., -3., false, true));\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n\nlet CreateBang (content:obj) =\n    let sprite = CreateSprite(unbox content?bang?texture)\n    sprite.anchor <- CreatePoint(0.5, 0.5)\n    {\n        Id = NextUniqueId();\n        Name = \"Bang\";\n        Active = false;\n        EntityType = EntityType.Explosion; \n        Layer = Layer.BANG;\n        Position = CreatePoint(0., 0.); \n        Scale = Some(CreatePoint(1., 1.))\n        Sprite = Some(sprite);\n        Tint = Some(Color.PaleGoldenrod);\n\n        Bounds = None;\n        Expires = Some(0.5);\n        Health = None;\n        Velocity = None;\n        Tween = Some(CreateTween(1./100., 1., -3., false, true));\n        Size = CreatePoint(float sprite.width, float sprite.height);\n    }\n\n"]}